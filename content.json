{"posts":[{"title":"DETR","text":"概要説明DETR (DEtection TRansformer) は、物体検出（object detection）タスクにおける新しいアプローチとして、2020年に Facebook AI（現 Meta AI）によって発表されたアルゴリズムです。DETR は、従来の物体検出モデルとは異なり、トランスフォーマーベースのアーキテクチャを使用することで、検出と分類のプロセスを大幅に簡素化しています。論文：https://arxiv.org/pdf/2005.12872 DETR の特徴Transformer Architecture自然言語処理で成果を挙げたトランスフォーマーを画像処理に応用しています。入力画像をエンコーダーで特徴量に変換し、トランスフォーマーデコーダーが物体の位置（bbox）とClass labelを予測します。 エンドツーエンドのアプローチ従来の物体検出では、アンカー生成や後処理（NMS: Non-Maximum Suppression）などの手作業のステップが必要でしたが、DETR ではこれらが不要となります。これにより、シンプルで効率的な学習が可能になっています。 マルチタスク(物体検出と分類を同時に実行)DETR は、画像中の物体の位置を検出し、それらを分類するプロセスを統一されたフレームワーク内で行います。 環境の準備DETR を動かすには、Python と PyTorch の環境が必要です。以下の手順で準備を進めます。 Python 環境の作成 12345# 仮想環境の作成（例: conda）conda create -n detr_env python=3.9 -yconda activate detr_envPyTorch のインストールPyTorch を CUDA 対応でインストールします（GPU 使用の場合）。 123456コードをコピーする# GPU 用 PyTorch (CUDA 11.7) のインストールpip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu117# CPU 用 PyTorch のインストール（GPU がない場合）pip install torch torchvision torchaudio DETRインストール早速、Git clone を実行して、確認しましょう。 12345git clone https://github.com/facebookresearch/detr.gitcd detr# 必要なライブラリをインストールpip install -r requirements.txt DETR を使用した推論それでは、COCO データセットを使用した事前学習済みモデルで物体検出を行います。 detr_inference.py ファイルを作成して推論コードを準備します。 1234567891011121314151617181920212223242526import torchfrom transformers import DetrForObjectDetection, DetrImageProcessorfrom PIL import Imageimport requests# 事前学習済みモデルとプロセッサのロードprocessor = DetrImageProcessor.from_pretrained(&quot;facebook/detr-resnet-50&quot;)model = DetrForObjectDetection.from_pretrained(&quot;facebook/detr-resnet-50&quot;)# 入力画像を用意url = &quot;https://images.unsplash.com/photo-1593642532973-d31b6557fa68&quot;image = Image.open(requests.get(url, stream=True).raw)# 推論inputs = processor(images=image, return_tensors=&quot;pt&quot;)outputs = model(**inputs)# 物体検出結果を取得results = processor.post_process_object_detection(outputs, threshold=0.9, target_sizes=[image.size])# 検出結果を出力for result in results: for score, label, box in zip(result[&quot;scores&quot;], result[&quot;labels&quot;], result[&quot;boxes&quot;]): print(f&quot;Label: {model.config.id2label[label.item()]}, Score: {score.item():.3f}, Box: {box.tolist()}&quot;) 保存して実行します。 1python detr_inference.py DETRのTraining1python -m torch.distributed.launch --nproc_per_node=1 --use_env main.py --coco_path /workspaces/bev-playground/dataset/coco","link":"/2024/12/19/DETR/"}],"tags":[],"categories":[{"name":"ML","slug":"ML","link":"/categories/ML/"}],"pages":[]}